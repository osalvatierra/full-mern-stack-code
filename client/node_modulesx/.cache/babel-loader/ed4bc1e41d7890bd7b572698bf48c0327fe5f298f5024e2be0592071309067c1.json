{"ast":null,"code":"var _jsxFileName = \"/Users/oscarsalvatierra/Desktop/React/full-mern-stack-code/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\n// import { populate } from \"../../../server/models/user.model\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const history = useNavigate();\n  const [quote, setQuote] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [tempQuote, setTempQuote] = useState(\"\");\n  async function populateQuote() {\n    const req = await fetch(\"http://localhost:3000/api/quote\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const data = req.json();\n    console.log(data);\n    if (data.status === \"ok\") {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwtDecode(token);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        history.replace(\"/login\");\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n  async function updateOne() {\n    const req = await fetch(\"http://localhost:3000/api/quote\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        quote: tempQuote\n      })\n    });\n    const data = req.json();\n    if (data.status === \"ok\") {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", quote || \"No quote found\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateQuote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quote\",\n        value: tempQuote,\n        setValue: e => setTempQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"eIUnRPqh2hIoNMAu7vWbULDtFcI=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jwtDecode","jsxDEV","_jsxDEV","Dashboard","_s","history","quote","setQuote","value","setValue","tempQuote","setTempQuote","populateQuote","req","fetch","headers","localStorage","getItem","data","json","console","log","status","alert","error","token","user","removeItem","replace","updateOne","method","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","updateQuote","type","placeholder","e","target","_c","$RefreshReg$"],"sources":["/Users/oscarsalvatierra/Desktop/React/full-mern-stack-code/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\n// import { populate } from \"../../../server/models/user.model\";\n\nconst Dashboard = () => {\n  const history = useNavigate();\n  const [quote, setQuote] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [tempQuote, setTempQuote] = useState(\"\");\n\n  async function populateQuote() {\n    const req = await fetch(\"http://localhost:3000/api/quote\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n    });\n    const data = req.json();\n    console.log(data);\n    if (data.status === \"ok\") {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwtDecode(token);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        history.replace(\"/login\");\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n\n  async function updateOne() {\n    const req = await fetch(\"http://localhost:3000/api/quote\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        quote: tempQuote,\n      }),\n    });\n    const data = req.json();\n\n    if (data.status === \"ok\") {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  return (\n    <div>\n      <h1>Your quote: {quote || \"No quote found\"} </h1>\n      <form onSubmit={updateQuote}>\n        <input\n          type=\"text\"\n          placeholder=\"Quote\"\n          value={tempQuote}\n          setValue={(e) => setTempQuote(e.target.value)}\n        />\n        <input type=\"submit\" value={\"Update Quote\"} />\n      </form>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}